{"version":3,"sources":["Login.js","SignUp.js","Header.js","Chat.js","Logout.js","History.js","index.js","App.js"],"names":["Login","props","signInRequest","bind","handleInputChange","state","authorized","user","firebase","auth","currentUser","event","target","value","name","this","setState","e","preventDefault","signInWithEmailAndPassword","email","password","then","authData","db","collection","doc","uid","get","data","window","localStorage","setItem","catch","err","error","message","to","Container","component","maxWidth","Typography","variant","align","onSubmit","TextField","margin","required","fullWidth","id","label","type","autoComplete","autoFocus","onChange","Button","color","Grid","container","item","className","React","Component","SignUp","signUpRequest","createUserWithEmailAndPassword","set","succsess","CssBaseline","noValidate","spacing","xs","justify","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","title","Header","classes","useState","AppBar","position","Toolbar","userName","Chat","sendMessage","socket","io","connect","getMessages","messages","reverse","on","messageData","JSON","parse","previousState","getItem","scrollToBottom","animateScroll","containerId","orderBy","limit","postObj","docs","map","dataToSend","msg","date","Date","emit","stringify","List","ListItem","ListItemText","primary","secondary","moment","fromNow","autocCmplete","onClick","Logout","signOut","clear","History","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.f80688c3.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {Link} from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport firebase from 'firebase';\nimport {Redirect} from \"react-router-dom\";\nimport {db} from \"./index.js\";\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.signInRequest = this.signInRequest.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.state = {\n            authorized: false,\n            user: firebase.auth().currentUser,\n        };\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    signInRequest(e) {\n        e.preventDefault();\n\n        firebase.auth()\n            .signInWithEmailAndPassword(this.state.email, this.state.password)\n            .then((authData) => {\n                db.collection(\"users\").doc(authData.user.uid).get().then((doc) => {\n                    const user = doc.data();\n\n                    if (user) {\n                        window.localStorage.setItem('authorized', true);\n                        window.localStorage.setItem('name', user.name);\n                        this.setState({authorized: true})\n                    }\n                })\n            }).catch((err) => {\n            this.setState({error: err.message})\n        })\n    }\n\n    render() {\n\n        if (this.state.authorized) {\n            return (\n                <Redirect to='/chat'/>\n            )\n        }\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <p>{this.state.error}</p>\n                <div>\n                    <Typography component=\"h1\" variant=\"h5\" align={\"center\"}>\n                        Login\n                    </Typography>\n                    <br/>\n                    <form onSubmit={this.signInRequest}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            type=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            onChange={this.handleInputChange}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={this.handleInputChange}\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Sign In\n                        </Button>\n                        <Grid container>\n                            <Grid item>\n                                <Link to=\"/signup\" variant=\"body2\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n\n                <br/>\n                <br/>\n                <div className=\"align-center\">\n                    <p>or you can chat as anonymous</p>\n                    <Button variant=\"outlined\" color=\"primary\">\n                       <Link to=\"/chat\">Go to Chat</Link>\n                    </Button>\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default Login","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport {Link} from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport firebase from \"firebase\";\nimport {db} from \"./index.js\";\nexport default class SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        this.signUpRequest = this.signUpRequest.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    signUpRequest(e) {\n        e.preventDefault();\n\n        firebase.auth()\n            .createUserWithEmailAndPassword(this.state.email, this.state.password).then((authData) => {\n            db.collection(\"users\").doc(authData.user.uid).set({\n                name: this.state.name\n            }).then(() => {\n                this.setState({succsess:true})\n            })\n        }, (error) => {\n            this.setState({error: error.message})\n        });\n    }\n\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    render() {\n        if(this.state.succsess) {\n            return(<Redirect to='/login'/>)\n        }\n\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <p>{this.state.error}</p>\n                <CssBaseline/>\n                <div>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <br/>\n                    <form noValidate onSubmit={this.signUpRequest}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"text\"\n                                    label=\"Your name\"\n                                    name=\"name\"\n                                    onChange={this.handleInputChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    onChange={this.handleInputChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    onChange={this.handleInputChange}\n                                />\n                            </Grid>\n                        </Grid>\n                        <br/>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link to=\"/login\" variant=\"body2\">\n                                    Already have an account? Sign in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Container>\n        )\n    }\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Header(props) {\n    const classes = useStyles();\n    const [auth] = React.useState(props.authorized);\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {props.title}\n                    </Typography>\n                    {auth && (\n                        <Typography> Your are logged in as {props.userName}</Typography>\n                    )}\n                    <Button variant=\"contained\" color=\"default\">{auth\n                        ? <Link to=\"/logout\">logout</Link>\n                        : <Link to=\"/login\">login</Link>}\n                    </Button>\n                    {auth && (\n                        <Button variant=\"contained\" color=\"default\"> <Link to=\"/history\">history</Link> </Button>)}\n                    {auth && (<Button variant=\"contained\" color=\"default\"> <Link to=\"/chat\">Chat</Link> </Button>)}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","import React from 'react';\nimport io from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {db} from \"./index.js\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from \"@material-ui/core/Button\";\nimport Header from \"./Header\";\n\nimport {animateScroll} from \"react-scroll\";\nimport moment from \"moment\";\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.sendMessage = this.sendMessage.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.socket = io.connect();\n        this.getMessages().then(messages => {\n            this.setState({messages: messages.reverse()});\n        });\n\n        this.socket.on('chat message', (data) => {\n            const messageData = JSON.parse(data);\n            this.setState(previousState => ({\n                messages: [...previousState.messages, messageData]\n            }));\n        });\n        this.state = {\n            messages: [],\n            userName: window.localStorage.getItem('name'),\n            authorized: window.localStorage.getItem('authorized'),\n        };\n    }\n\n    componentDidMount() {\n        this.scrollToBottom();\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n    scrollToBottom() {\n        animateScroll.scrollToBottom({\n            containerId: \"messages-block\"\n        });\n    }\n\n    getMessages() {\n        return db.collection('messages').orderBy(\"date\", \"desc\").limit(30).get().then((postObj) => {\n            return postObj.docs.map(doc => {\n                return doc.data()\n            })\n        });\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    sendMessage() {\n        const dataToSend = {\n            name: this.state.authorized ? this.state.userName : null,\n            message: this.state.msg,\n            date: new Date()\n        };\n\n        this.socket.emit('chat message', JSON.stringify(dataToSend));\n    }\n\n    render() {\n        const messages = this.state.messages;\n\n        return (\n            <div>\n                <Header userName={this.state.userName} authorized={this.state.authorized} title={'Chat'}/>\n                <List id=\"messages-block\" className='messages-block'>\n                    {\n                        messages.map(message => {\n                            return (<ListItem>\n                                    <span>\n                                    </span>\n                                    <ListItemText\n                                        primary={message.message}\n                                        secondary={`by ${(message.name || 'anonymous')}  ${moment(message.date).fromNow()}`}\n                                    />\n                                </ListItem>\n                            )\n                        })\n                    }\n                </List>\n                <div className=\"footer\">\n                    <div>\n                        <TextField className=\"message-input\"\n                                   fullWidth label=\"Type here your message...\"\n                                   name='msg'\n                                   onChange={this.handleInputChange}\n                                   autoFocus={true}\n                                   autocCmplete={false}\n                        />\n                        <Button variant=\"outlined\" className='send-button' onClick={this.sendMessage}>\n                            Send\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chat","import firebase from 'firebase';\nimport {Redirect} from \"react-router-dom\";\nimport React from \"react\";\n\n\nfunction Logout() {\n    firebase.auth().signOut().then(() => {\n        window.localStorage.clear();\n    }).catch((err) => {\n    });\n\n    return (<Redirect to='/login'/>)\n}\n\n\nexport default Logout","import React from 'react';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {animateScroll} from \"react-scroll\";\nimport moment from \"moment\";\n\nimport Header from \"./Header\";\nimport {db} from \"./index.js\";\nclass History extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.getMessages().then(messages => {\n            this.setState({messages: messages.reverse()});\n        });\n\n         this.state = {\n            messages: [],\n            userName: window.localStorage.getItem('name'),\n            authorized: window.localStorage.getItem('authorized'),\n        };\n    }\n\n    componentDidMount() {\n        this.scrollToBottom();\n    }\n\n    scrollToBottom() {\n        animateScroll.scrollToBottom({\n            containerId: \"messages-block\"\n        });\n    }\n\n    getMessages() {\n        return db.collection('messages').orderBy(\"date\", \"desc\").get().then((postObj) => {\n            return postObj.docs.map(doc => {\n                return doc.data()\n            })\n        });\n    }\n\n    render() {\n        const messages = this.state.messages;\n\n        return (\n            <div>\n                <Header userName={this.state.userName} authorized={this.state.authorized} title={'History'}/>\n\n                <List id=\"messages-block\" className='messages-block history'>\n                    {\n                        messages.map(message => {\n                            return (<ListItem>\n                                    <span>\n                                    </span>\n                                    <ListItemText\n                                        primary={message.message}\n                                        secondary={`by ${(message.name || 'anonymous')}  ${moment(message.date).fromNow()}`}\n                                    />\n                                </ListItem>\n                            )\n                        })\n                    }\n                </List>\n            </div>\n        );\n    }\n}\n\nexport default History","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport firebase from 'firebase'\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyBfxjNjjsQKIoSHSj1ZNMIQ18HS1m0h6F4\",\n    authDomain: \"lab7-chat.firebaseapp.com\",\n    databaseURL: \"https://lab7-chat.firebaseio.com\",\n    projectId: \"lab7-chat\",\n    storageBucket: \"lab7-chat.appspot.com\",\n    messagingSenderId: \"698623761262\",\n    appId: \"1:698623761262:web:d47d37a0d755339d887f7f\",\n    measurementId: \"G-12FSK5YH7F\"\n});\n\nexport const db = firebase.firestore();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport SignUp from \"./SignUp\";\nimport Chat from \"./Chat\";\nimport Logout from \"./Logout\";\nimport History from \"./History\";\n\nexport default function App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/login\">\n                    <Login/>\n                </Route>\n                <Route path=\"/signup\">\n                    <SignUp/>\n                </Route>\n                <Route path=\"/logout\">\n                    <Logout/>\n                </Route>\n                <Route path=\"/history\">\n                    <History/>\n                </Route>\n                <Route path=\"/\">\n                    <Chat/>\n                </Route>\n            </Switch>\n        </Router>\n    )\n}\n"],"sourceRoot":""}